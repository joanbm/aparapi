<?xml version="1.0"?>

<!--
You should not have to edit this file
First consider editing the properties in build.properties
-->
<project name="com.amd.aparapi.jni" default="build" basedir=".">

   <!--
   DO NOT EDIT BELOW THIS LINE
   -->
   <echo>OS Name:    ${os.name}</echo>
   <echo>OS Version: ${os.version}</echo>
   <echo>OS Arch:    ${os.arch}</echo>
   <echo>Java Ver:   ${java.version}</echo>

	<!-- Use this property to set the target javac version
	<property name="build.compiler" value="javac1.8"/>
	<property name="ant.build.javac.source" value="1.8"/>
	<property name="ant.build.javac.target" value="1.8"/> -->
	
   <property environment="env" />


   <target name="clean" depends="check">
      <delete dir="include" />
      <delete dir="${basedir}/dist" />
      <!-- Legacy cleanup -->
      <delete file="libaparapi_x86_64.so" />
      <delete file="aparapi.dll" />
      <delete file="aparapi.obj" />
      <delete file="aparapi.o" />
      <delete file="aparapi.lib" />
      <delete file="aparapi.exp" />
      <delete file="OpenCLJNI.obj" />
      <delete file="OpenCLJNI.o" />
      <delete file="Config.obj" />
      <delete file="Config.o" />
      <delete file="ProfileInfo.obj" />
      <delete file="ProfileInfo.o" />
      <delete file="ArrayBuffer.obj" />
      <delete file="ArrayBuffer.o" />
      <delete file="AparapiBuffer.obj" />
      <delete file="AparapiBuffer.o" />
      <delete file="JNIHelper.obj" />
      <delete file="JNIHelper.o" />
      <delete file="CLHelper.obj" />
      <delete file="CLHelper.o" />
      <delete file="JNIContext.obj" />
      <delete file="JNIContext.o" />
      <delete file="KernelArg.obj" />
      <delete file="KernelArg.o" />
      <delete file="Range.obj" />
      <delete file="Range.o" />
      <delete file="OpenCLArgDescriptor.obj" />
      <delete file="OpenCLArgDescriptor.o" />
      <delete file="agent.obj" />
      <delete file="agent.o" />
      <delete file="classtools.obj" />
      <delete file="classtools.o" />
      <delete file="OpenCLMem.obj" />
      <delete file="OpenCLMem.o" />
   </target>

   <target name="javah">
      <mkdir dir="include" />
      <javah classpath="..\com.amd.aparapi\classes" destdir="include" force="true">
         <class name="com.amd.aparapi.internal.jni.ConfigJNI" />
         <class name="com.amd.aparapi.internal.jni.KernelArgJNI" />
         <class name="com.amd.aparapi.internal.jni.KernelRunnerJNI" />
         <class name="com.amd.aparapi.internal.jni.OpenCLJNI" />
         <class name="com.amd.aparapi.internal.jni.RangeJNI" />
         <!-- Non-Native Classes -->
         <class name="com.amd.aparapi.Kernel"/>
         <class name="com.amd.aparapi.Range"/>
         <class name="com.amd.aparapi.Config" />
         <class name="com.amd.aparapi.device.Device" />
         <class name="com.amd.aparapi.device.OpenCLDevice" />
         <class name="com.amd.aparapi.internal.kernel.KernelRunner"/>
         <class name="com.amd.aparapi.internal.opencl.OpenCLArgDescriptor" />
         <class name="com.amd.aparapi.internal.opencl.OpenCLMem" />
      </javah>
   </target>

   <target name="gcc">
      <mkdir dir="${basedir}/dist"/>
      <echo message="DCL_HOME: ${env.DCL_HOME}" />
      <echo message="linuxcc ${os.arch}" />
      <exec executable="g++" failonerror="true">
         <arg value="-m64" />
         <arg value="-w" />
         <arg value="-O3" />
         <arg value="-g" />
         <arg value="-fPIC" />
         <arg value="-DCL_USE_DEPRECATED_OPENCL_1_1_APIS"/>
         <arg value="-I${java.home}/../include" />
         <arg value="-I${java.home}/../include/linux" />
         <arg value="-Iinclude" />
         <arg value="-Isrc/cpp" />
         <arg value="-Isrc/cpp/runKernel" />
         <arg value="-Isrc/cpp/invoke" />
         <arg value="-I${env.DCL_HOME}/dclasio/include/" />

         <arg value="-shared" />
         <arg value="-o" />
         <arg value="${basedir}/dist/libaparapi_x86_64.so" />
         <arg value="src/cpp/runKernel/Aparapi.cpp" />
         <arg value="src/cpp/runKernel/ArrayBuffer.cpp" />
         <arg value="src/cpp/runKernel/AparapiBuffer.cpp" />
         <arg value="src/cpp/runKernel/Config.cpp" />
         <arg value="src/cpp/runKernel/JNIContext.cpp" />
         <arg value="src/cpp/runKernel/KernelArg.cpp" />
         <arg value="src/cpp/runKernel/ProfileInfo.cpp" />
         <arg value="src/cpp/runKernel/Range.cpp" />
         <arg value="src/cpp/invoke/OpenCLJNI.cpp" />
         <arg value="src/cpp/invoke/OpenCLArgDescriptor.cpp" />
         <arg value="src/cpp/invoke/OpenCLMem.cpp" />
         <arg value="src/cpp/CLHelper.cpp" />
         <arg value="src/cpp/classtools.cpp" />
         <arg value="src/cpp/JNIHelper.cpp" />
         <arg value="src/cpp/agent.cpp" />
         <arg value="-L${env.DCL_HOME}/dclasio/" />
         <arg value="-lOpenCL" />
      </exec>
   </target>

   <target name="build" depends="clean, javah, gcc" />

</project>
